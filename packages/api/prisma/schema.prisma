// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// This is an enviromnet like prod/test/staging
model Environment {
  id       Int       @id @default(autoincrement())
  services Service[]
}

// How to build the container
model BuildFactory {
  id           Int        @id @default(autoincrement())
  repository   Repository @relation(fields: [repositoryId], references: [id])
  repositoryId Int

  builds Build[]
}

// Credentials to get into a repository
model Repository {
  id                 Int            @id @default(autoincrement())
  buildConfiguration BuildFactory[]
}

// A particular container build
model Build {
  id                   Int          @id @default(autoincrement())
  buildConfiguration   BuildFactory @relation(fields: [buildConfigurationId], references: [id])
  buildConfigurationId Int
}

// Configuration for making deployments
model DeploymentFactory {
  id          Int          @id @default(autoincrement())
  deployments Deployment[]
  Service     Service      @relation(fields: [serviceId], references: [id])
  serviceId   Int
}

// a build, deployed to a particular environment
model Deployment {
  id                  Int               @id @default(autoincrement())
  service             Service           @relation(fields: [serviceId], references: [id])
  serviceId           Int
  DeploymentFactory   DeploymentFactory @relation(fields: [deploymentFactoryId], references: [id])
  deploymentFactoryId Int
}

// Represents a particular service in a particular environment
model Service {
  id                  Int                 @id @default(autoincrement())
  deployments         Deployment[]
  environment         Environment         @relation(fields: [environmentId], references: [id])
  environmentId       Int
  deploymentFactories DeploymentFactory[]
}

// Model the idea of databases for migrations
model Database {
  id Int @id @default(autoincrement())
}
